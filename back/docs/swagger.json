{
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "title": "KeepTheMoment REST API",
        "contact": {},
        "version": "1.0"
    },
    "host": "keepthemoment.ru",
    "basePath": "/api",
    "paths": {
        "/auth/login": {
            "post": {
                "consumes": [
                    "application/json",
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Generates session token for user.",
                "parameters": [
                    {
                        "description": "email and password",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.loginIn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.loginOut200"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/auth.loginOut202"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Expires session token.",
                "responses": {
                    "200": {},
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/hashtag/lookup": {
            "post": {
                "consumes": [
                    "application/json",
                    "multipart/form-data"
                ],
                "summary": "Get the list of hashtags similar to one that user tries to enter.",
                "parameters": [
                    {
                        "description": "hashtag name beginning",
                        "name": "hashtag",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hashtag.lookupIn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hashtag.lookupOut200"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/hashtag/top": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Returns the global top 10 of hashtags.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hashtag.topOut200"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/user/info": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Return information about user, or 404 if user not registered.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.getInfoOut200"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json",
                    "multipart/form-data"
                ],
                "summary": "Updates information about user.",
                "parameters": [
                    {
                        "description": "all information about user",
                        "name": "user_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.updateInfoIn"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/user.getInfoOut200"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.loginIn": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "auth.loginOut200": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "auth.loginOut202": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "hashtag.lookupIn": {
            "type": "object",
            "properties": {
                "hashtag": {
                    "type": "string"
                }
            }
        },
        "hashtag.lookupOut200": {
            "type": "object",
            "properties": {
                "hashtags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "hashtag.topOut200": {
            "type": "object",
            "properties": {
                "hashtags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "httputil.HTTPError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "user.getInfoOut200": {
            "type": "object",
            "properties": {
                "bio": {
                    "type": "string"
                },
                "birth": {
                    "type": "string"
                },
                "hashtags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "user.updateInfoIn": {
            "type": "object",
            "properties": {
                "bio": {
                    "type": "string"
                },
                "birth": {
                    "type": "string"
                },
                "hashtags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}