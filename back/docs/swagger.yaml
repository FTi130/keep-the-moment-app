basePath: /api
definitions:
  auth.loginIn:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  auth.loginOut200:
    properties:
      token:
        type: string
    type: object
  auth.loginOut202:
    properties:
      email:
        type: string
    type: object
  hashtag.lookupIn:
    properties:
      hashtag:
        type: string
    type: object
  hashtag.lookupOut200:
    properties:
      hashtags:
        items:
          type: string
        type: array
    type: object
  hashtag.topOut200:
    properties:
      hashtags:
        items:
          type: string
        type: array
    type: object
  httputil.HTTPError:
    properties:
      message:
        type: string
    type: object
  postgres.User:
    properties:
      bio:
        type: string
      birth:
        type: string
      email:
        type: string
      hashtags:
        items:
          type: string
        type: array
      id:
        type: string
      image:
        type: string
      registered:
        type: string
      username:
        type: string
    type: object
host: keepthemoment.ru
info:
  contact: {}
  title: KeepTheMoment REST API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: email and password
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/auth.loginIn'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.loginOut200'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/auth.loginOut202'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Generates session token for user.
  /auth/logout:
    post:
      produces:
      - application/json
      responses:
        "200": {}
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Expires session token.
  /hashtag/lookup:
    post:
      consumes:
      - application/json
      parameters:
      - description: hashtag name beginning
        in: body
        name: hashtag
        required: true
        schema:
          $ref: '#/definitions/hashtag.lookupIn'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/hashtag.lookupOut200'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Get the list of hashtags similar to one that user tries to enter.
  /hashtag/top:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/hashtag.topOut200'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Returns the global top 10 of hashtags.
  /user/info:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/postgres.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Return information about user, or 404 if user not registered.
    post:
      consumes:
      - application/json
      parameters:
      - description: all information about user
        in: body
        name: user_info
        required: true
        schema:
          $ref: '#/definitions/postgres.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/postgres.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Updates information about user.
schemes:
- https
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
